{"name":"Raguel","tagline":"raguel - the shell archangel","body":"### raguel\r\n\r\nMythological Context: http://en.wikipedia.org/wiki/Raguel_(archangel)\r\nReference: ArchAngel, Name means The friend of God.\r\n\r\nIt's here to be the friend of Shell Gods to create minion scripts to serve\r\nthe SYSTEMS.\r\n\r\n```ASCII\r\n                     \\\\                        //\\\\   _______________________\r\n || /===  |====||   |====}}  \\\\  \\\\    //===     ||   |                     |\r\n ||//          ||   \\\\__//   ||  ||    \\\\__      ||   | Shell Script Friend |\r\n ||       ||===||   //  \\\\   ||  ||    //        ||   | Yes It's Old School |\r\n ||       ||___||   \\\\___}}   \\\\_||//  \\\\__//   _||   |_____________________|\r\n\r\n```\r\n\r\nFor ways it can improve Shell Scripting, refer Wiki.\r\n\r\nIt's best suited to Bourne Shell,\r\nthough it's made compatible to others as much possible.\r\n\r\n***\r\n***\r\n\r\n### Spells available:\r\n\r\n#### [Display](https://github.com/abhishekkr/raguel/blob/master/doc/display.md)\r\n\r\n* Shout out a message as a Banner\r\n\r\n```Shell\r\n  shout $MESSAGE\r\n  RAGUEL_SHOUT_CHAR='~' RAGUEL_SHOUT_CHAR_COUNT=50 shout $MESSAGE\r\n```\r\n\r\n\r\n#### [Looper](https://github.com/abhishekkr/raguel/blob/master/doc/looper.md)\r\n\r\n* Loop a given command run for given count\r\n\r\n```Shell\r\n  repeat_run $TIMES_TO_REPEAT \"$COMMAND_TO_RUN\"\r\n```\r\n\r\n\r\n#### [Git](https://github.com/abhishekkr/raguel/blob/master/doc/git.md)\r\n\r\n* Set Env Var RAGUEL_GIT_LOCAL_SHA to latest Local SHA in Current DIR\r\n\r\n```Shell\r\n  local_sha\r\n```\r\n\r\n* Set Env Var RAGUEL_GIT_REMOTE_SHA to latest Remote SHA in Current DIR\r\n\r\n```Shell\r\n  remote_sha\r\n```\r\n\r\n\r\n#### [Configurator](https://github.com/abhishekkr/raguel/blob/master/doc/configurator.md)\r\n\r\n* Non-Interactive Package Manager\r\n\r\n```Shell\r\n  auto_install $PackageName\r\n\r\n  > auto_install, auto_uninstall\r\n```\r\n\r\n* Info ENV Var for Distro\r\n\r\n```Shell\r\n  $RAGUEL_DISTRO_TYPE : telling what distro family is RHEL, Debian, etc.\r\n \r\n  $RAGUEL_PACKAGE_INSTALL : setting the auto-install command here\r\n\r\n  $RAGUEL_PACKAGE_UNINSTALL : setting the auto-uninstall command here\r\n\r\n  $RAGUEL_NODENAME : the nodename grabbed from uname goes here\r\n\r\n  $RAGUEL_ARCH : architecture information grabbed from uname goes here\r\n```\r\n\r\n\r\n#### [Checker](https://github.com/abhishekkr/raguel/blob/master/doc/checker.md)\r\n\r\n```Shell\r\n  All the checkers have if_{check}, then_if_{check}, else_if_{check}, if_not_{check}, then_if_not_{check}, else_if_not_{check}\r\n```\r\n\r\n```Shell\r\n  So every check has a negation check version. And they both have then_, else_ checks for enabling chaining of checks as in get &&, || boolean functionality among checks.\r\n```\r\n\r\n* then_run , else_run , end_if\r\n\r\n```Shell\r\n  Every check can have following command on same line to run if check passes. Otherwise use then_run, else_run in combination with any check. It also provides 'end_if' to explicitly close Check block and make look good.\r\n```\r\n\r\n##### The example shown for if_equal can be used in permutation/combination with any other checks.\r\n\r\n* Check for equality of 2 arguments\r\n\r\n```Shell\r\n  if_equal $ARG1 $ARG2 \"$CMD_IF_PASSED\"\r\n\r\n  if_equal $ARG1 $ARG2\r\n  then_run \"$CMD_IF_PASSED\"\r\n\r\n  if_equal $ARG1 $ARG2\r\n  else_run \"$CMD_IF_FAILED\"\r\n\r\n  if_equal $ARG1 $ARG2\r\n  then_run \"$CMD_IF_PASSED\"\r\n  else_run \"$CMD_IF_FAILED\"\r\n\r\n  if_equal $ARG1 $ARG2\r\n  then_run \"$CMD_IF_PASSED\"\r\n  else_run \"$CMD_IF_FAILED\"\r\n  end_if\r\n\r\n  if_equal $ARG1 $ARG2\r\n  then_if_equal $ARG3 $ARG4\r\n  then_if_equal $ARG5 $ARG6\r\n  then_run \"$CMD_IF_PASSED_1\"\r\n  else_if_equal $ARG7 $ARG8\r\n  then_run \"$CMD_IF_PASSED_2\"\r\n  else_run \"$CMD_IF_FAILED\"\r\n  end_if\r\n\r\n  > spells: if_equal, then_if_equal, else_if_equal, if_not_equal, then_if_not_equal, else_if_not_equal\r\n```\r\n\r\n\r\n* Check for Regular File existence\r\n\r\n```Shell\r\n  if_file $FILEPATH\r\n\r\n  > spells: if_file, then_if_file, else_if_file, if_not_file, then_if_not_file, else_if_not_file\r\n```\r\n\r\n\r\n* Check for Directory existence\r\n\r\n```Shell\r\n  if_dir $DIRNAME\r\n\r\n  > spells: if_dir, then_if_dir, else_if_dir, if_not_dir, then_if_not_dir, else_if_not_dir\r\n```\r\n\r\n* Check for File being empty in size\r\n\r\n```Shell\r\n  if_file_empty $FILEPATH\r\n\r\n  > spells: if_file_empty, then_if_file_empty, else_if_file_empty, if_not_file_empty, then_if_not_file_empty, else_if_not_file_empty\r\n```\r\n\r\n* Check for File being Executable\r\n\r\n```Shell\r\n  if_file_executable $FILENAME\r\n\r\n  > spells: if_file_executable, then_if_file_executable, else_if_file_executable, if_not_file_executable, then_if_not_file_executable, else_if_not_file_executable\r\n```\r\n\r\n* Check for File being Writable\r\n\r\n```Shell\r\n  if_file_writable $FILENAME\r\n\r\n  > spells: if_file_writable, then_if_file_writable, else_if_file_writable, if_not_file_writable, then_if_not_file_writable, else_if_not_file_writable\r\n```\r\n\r\n* Check for File being SymLink\r\n\r\n```Shell\r\n  if_link $FILENAME\r\n\r\n  > spells: if_link, then_if_link, else_if_link, if_not_link, then_if_not_link, else_if_not_link\r\n```\r\n\r\n* Check for Env Variable being defined\r\n\r\n```Shell\r\n  if_var $VARNAME\r\n\r\n  > spells: if_var, then_if_var, else_if_var, if_not_var, then_if_not_var, else_if_not_var\r\n```\r\n\r\n* Check if given Git Repo dir has latest RAGUEL_GIT_REMOTE_BRANCH changes\r\n\r\n```Shell\r\n  if_git_latest $VARNAME\r\n\r\n  > spells: if_git_latest, then_if_git_latest, else_if_git_latest, if_not_git_latest, then_if_not_git_latest, else_if_not_git_latest\r\n```\r\n\r\n* Check if a particular System Command is accessible or not\r\n\r\n```Shell\r\n  if_cmd $CMDNAME\r\n\r\n  > spells: if_cmd, then_if_cmd, else_if_cmd, if_not_cmd, then_if_not_cmd, else_if_not_cmd\r\n```\r\n\r\n\r\n\r\n#### [Deployer](https://github.com/abhishekkr/raguel/blob/master/doc/deployer.md)\r\n\r\n* Get the latest Code at DeployDir from the Remote Repo and backup current Repo, need to run service reset explicitly\r\n```Shell\r\n  deploy_latest $GIT_URL $DEPLOY_DIR\r\n```\r\n\r\n* Rollback the DeployDir to BackUp, need to run service reset explicitly\r\n\r\n```Shell\r\n  deploy_rollback $DEPLOY_DIR\r\n```\r\n\r\nRefer [this EXAMPLE](https://github.com/abhishekkr/raguel/blob/master/examples/deploy.dead.drop_with_deployer.sh) on how to get rolling with it.\r\n\r\n***\r\n***\r\n\r\n#### Quick Examples:\r\n\r\n```Shell\r\n#!bash\r\n\r\nRAGUEL_URL=\"https://github.com/abhishekkr/raguel/archive/master.tar.gz\"\r\nRAGUEL_TGZ=\"raguel.tgz\"\r\nRAGUEL_SRC=\"./raguel-master/src/raguel.sh\"\r\n\r\ncurl -kL -o $RAGUEL_TGZ $RAGUEL_URL\r\ntar -zxf raguel.tgz\r\n\r\ncat > ./setup_my_box << EOF\r\n#!bash\r\n\r\n. $RAGUEL_SRC --source-only\r\nGEMRC_URL=\"https://raw.github.com/abhishekkr/tux-svc-mux/master/rc/gemrc\"\r\n\r\n\r\nif_not_file \"\\$HOME/.gemrc\"\r\n  then_run \"curl -kL -o \\$HOME/.gemrc \\$GEMRC_URL\"\r\n\r\nif_not_cmd \"ruby\" auto_install ruby\r\nif_not_cmd \"gem\" auto_install rubygems\r\nif_not_cmd \"bundle\" gem install bundler\r\nEOF\r\n\r\nbash ./setup_my_box\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}